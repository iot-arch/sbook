<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Using-hugos on GB28181 Security Technology</title><link>https://iot-arch.github.io/sbook/using-hugo/</link><description>Recent content in Using-hugos on GB28181 Security Technology</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy;{year}, All Rights Reserved</copyright><lastBuildDate>Tue, 10 Mar 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://iot-arch.github.io/sbook/using-hugo/index.xml" rel="self" type="application/rss+xml"/><item><title>(Hu)go Template Primer</title><link>https://iot-arch.github.io/sbook/using-hugo/goisforlovers/</link><pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate><guid>https://iot-arch.github.io/sbook/using-hugo/goisforlovers/</guid><description>goisforlovers Hugo uses the excellent Go html/template library for its template engine. It is an extremely lightweight engine that provides a very small amount of logic. In our experience that it is just the right amount of logic to be able to create a good static website. If you have used other template systems from different languages or frameworks you will find a lot of similarities in Go templates.
This document is a brief primer on using Go templates.</description></item><item><title>Getting Started with Hugo</title><link>https://iot-arch.github.io/sbook/using-hugo/hugoisforlovers/</link><pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate><guid>https://iot-arch.github.io/sbook/using-hugo/hugoisforlovers/</guid><description>hugoisforlovers Step 1. Install Hugo Go to Hugo releases and download the appropriate version for your OS and architecture.
Save it somewhere specific as we will be using it in the next step.
More complete instructions are available at Install Hugo
Step 2. Build the Docs Hugo has its own example site which happens to also be the documentation site you are reading right now.
Follow the following steps:
Clone the Hugo repository Go into the repo Run hugo in server mode and build the docs Open your browser to http://localhost:1313 Corresponding pseudo commands:</description></item><item><title>Migrate to Hugo from Jekyll</title><link>https://iot-arch.github.io/sbook/using-hugo/migrate-from-jekyll/</link><pubDate>Tue, 10 Mar 2020 00:00:00 +0000</pubDate><guid>https://iot-arch.github.io/sbook/using-hugo/migrate-from-jekyll/</guid><description>migrate-from-jekyll Move static content to static Jekyll has a rule that any directory not starting with _ will be copied as-is to the _site output. Hugo keeps all static content under static. You should therefore move it all there. With Jekyll, something that looked like
1 2 3 ▾ &amp;lt;root&amp;gt;/ ▾ images/ logo.png should become
1 2 3 4 ▾ &amp;lt;root&amp;gt;/ ▾ static/ ▾ images/ logo.png Additionally, you&amp;rsquo;ll want any files that should reside at the root (such as CNAME) to be moved to static.</description></item><item><title/><link>https://iot-arch.github.io/sbook/using-hugo/readme/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://iot-arch.github.io/sbook/using-hugo/readme/</guid><description>post</description></item></channel></rss>